/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

package com.google.container.v1;

/**
 *
 *
 * <pre>
 * Configuration for controlling how IPs are allocated in the cluster.
 * </pre>
 *
 * Protobuf type {@code google.container.v1.IPAllocationPolicy}
 */
public final class IPAllocationPolicy extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.container.v1.IPAllocationPolicy)
    IPAllocationPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use IPAllocationPolicy.newBuilder() to construct.
  private IPAllocationPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private IPAllocationPolicy() {
    subnetworkName_ = "";
    clusterIpv4Cidr_ = "";
    nodeIpv4Cidr_ = "";
    servicesIpv4Cidr_ = "";
    clusterSecondaryRangeName_ = "";
    servicesSecondaryRangeName_ = "";
    clusterIpv4CidrBlock_ = "";
    nodeIpv4CidrBlock_ = "";
    servicesIpv4CidrBlock_ = "";
    tpuIpv4CidrBlock_ = "";
    stackType_ = 0;
    ipv6AccessType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new IPAllocationPolicy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.container.v1.ClusterServiceProto
        .internal_static_google_container_v1_IPAllocationPolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.container.v1.ClusterServiceProto
        .internal_static_google_container_v1_IPAllocationPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.container.v1.IPAllocationPolicy.class,
            com.google.container.v1.IPAllocationPolicy.Builder.class);
  }

  public static final int USE_IP_ALIASES_FIELD_NUMBER = 1;
  private boolean useIpAliases_;
  /**
   *
   *
   * <pre>
   * Whether alias IPs will be used for pod IPs in the cluster.
   * This is used in conjunction with use_routes. It cannot
   * be true if use_routes is true. If both use_ip_aliases and use_routes are
   * false, then the server picks the default IP allocation mode
   * </pre>
   *
   * <code>bool use_ip_aliases = 1;</code>
   *
   * @return The useIpAliases.
   */
  @java.lang.Override
  public boolean getUseIpAliases() {
    return useIpAliases_;
  }

  public static final int CREATE_SUBNETWORK_FIELD_NUMBER = 2;
  private boolean createSubnetwork_;
  /**
   *
   *
   * <pre>
   * Whether a new subnetwork will be created automatically for the cluster.
   * This field is only applicable when `use_ip_aliases` is true.
   * </pre>
   *
   * <code>bool create_subnetwork = 2;</code>
   *
   * @return The createSubnetwork.
   */
  @java.lang.Override
  public boolean getCreateSubnetwork() {
    return createSubnetwork_;
  }

  public static final int SUBNETWORK_NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object subnetworkName_;
  /**
   *
   *
   * <pre>
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   * </pre>
   *
   * <code>string subnetwork_name = 3;</code>
   *
   * @return The subnetworkName.
   */
  @java.lang.Override
  public java.lang.String getSubnetworkName() {
    java.lang.Object ref = subnetworkName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subnetworkName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   * </pre>
   *
   * <code>string subnetwork_name = 3;</code>
   *
   * @return The bytes for subnetworkName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSubnetworkNameBytes() {
    java.lang.Object ref = subnetworkName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      subnetworkName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_IPV4_CIDR_FIELD_NUMBER = 4;
  private volatile java.lang.Object clusterIpv4Cidr_;
  /**
   *
   *
   * <pre>
   * This field is deprecated, use cluster_ipv4_cidr_block.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1307
   * @return The clusterIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.lang.String getClusterIpv4Cidr() {
    java.lang.Object ref = clusterIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * This field is deprecated, use cluster_ipv4_cidr_block.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1307
   * @return The bytes for clusterIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.protobuf.ByteString getClusterIpv4CidrBytes() {
    java.lang.Object ref = clusterIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clusterIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_IPV4_CIDR_FIELD_NUMBER = 5;
  private volatile java.lang.Object nodeIpv4Cidr_;
  /**
   *
   *
   * <pre>
   * This field is deprecated, use node_ipv4_cidr_block.
   * </pre>
   *
   * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1310
   * @return The nodeIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.lang.String getNodeIpv4Cidr() {
    java.lang.Object ref = nodeIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * This field is deprecated, use node_ipv4_cidr_block.
   * </pre>
   *
   * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1310
   * @return The bytes for nodeIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.protobuf.ByteString getNodeIpv4CidrBytes() {
    java.lang.Object ref = nodeIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      nodeIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_IPV4_CIDR_FIELD_NUMBER = 6;
  private volatile java.lang.Object servicesIpv4Cidr_;
  /**
   *
   *
   * <pre>
   * This field is deprecated, use services_ipv4_cidr_block.
   * </pre>
   *
   * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1313
   * @return The servicesIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.lang.String getServicesIpv4Cidr() {
    java.lang.Object ref = servicesIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * This field is deprecated, use services_ipv4_cidr_block.
   * </pre>
   *
   * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
   *
   * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
   *     google/container/v1/cluster_service.proto;l=1313
   * @return The bytes for servicesIpv4Cidr.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.protobuf.ByteString getServicesIpv4CidrBytes() {
    java.lang.Object ref = servicesIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      servicesIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_SECONDARY_RANGE_NAME_FIELD_NUMBER = 7;
  private volatile java.lang.Object clusterSecondaryRangeName_;
  /**
   *
   *
   * <pre>
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string cluster_secondary_range_name = 7;</code>
   *
   * @return The clusterSecondaryRangeName.
   */
  @java.lang.Override
  public java.lang.String getClusterSecondaryRangeName() {
    java.lang.Object ref = clusterSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterSecondaryRangeName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string cluster_secondary_range_name = 7;</code>
   *
   * @return The bytes for clusterSecondaryRangeName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClusterSecondaryRangeNameBytes() {
    java.lang.Object ref = clusterSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clusterSecondaryRangeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_SECONDARY_RANGE_NAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object servicesSecondaryRangeName_;
  /**
   *
   *
   * <pre>
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string services_secondary_range_name = 8;</code>
   *
   * @return The servicesSecondaryRangeName.
   */
  @java.lang.Override
  public java.lang.String getServicesSecondaryRangeName() {
    java.lang.Object ref = servicesSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesSecondaryRangeName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string services_secondary_range_name = 8;</code>
   *
   * @return The bytes for servicesSecondaryRangeName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServicesSecondaryRangeNameBytes() {
    java.lang.Object ref = servicesSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      servicesSecondaryRangeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_IPV4_CIDR_BLOCK_FIELD_NUMBER = 9;
  private volatile java.lang.Object clusterIpv4CidrBlock_;
  /**
   *
   *
   * <pre>
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr_block = 9;</code>
   *
   * @return The clusterIpv4CidrBlock.
   */
  @java.lang.Override
  public java.lang.String getClusterIpv4CidrBlock() {
    java.lang.Object ref = clusterIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr_block = 9;</code>
   *
   * @return The bytes for clusterIpv4CidrBlock.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClusterIpv4CidrBlockBytes() {
    java.lang.Object ref = clusterIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clusterIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_IPV4_CIDR_BLOCK_FIELD_NUMBER = 10;
  private volatile java.lang.Object nodeIpv4CidrBlock_;
  /**
   *
   *
   * <pre>
   * The IP address range of the instance IPs in this cluster.
   * This is applicable only if `create_subnetwork` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string node_ipv4_cidr_block = 10;</code>
   *
   * @return The nodeIpv4CidrBlock.
   */
  @java.lang.Override
  public java.lang.String getNodeIpv4CidrBlock() {
    java.lang.Object ref = nodeIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The IP address range of the instance IPs in this cluster.
   * This is applicable only if `create_subnetwork` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string node_ipv4_cidr_block = 10;</code>
   *
   * @return The bytes for nodeIpv4CidrBlock.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNodeIpv4CidrBlockBytes() {
    java.lang.Object ref = nodeIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      nodeIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_IPV4_CIDR_BLOCK_FIELD_NUMBER = 11;
  private volatile java.lang.Object servicesIpv4CidrBlock_;
  /**
   *
   *
   * <pre>
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string services_ipv4_cidr_block = 11;</code>
   *
   * @return The servicesIpv4CidrBlock.
   */
  @java.lang.Override
  public java.lang.String getServicesIpv4CidrBlock() {
    java.lang.Object ref = servicesIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string services_ipv4_cidr_block = 11;</code>
   *
   * @return The bytes for servicesIpv4CidrBlock.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServicesIpv4CidrBlockBytes() {
    java.lang.Object ref = servicesIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      servicesIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TPU_IPV4_CIDR_BLOCK_FIELD_NUMBER = 13;
  private volatile java.lang.Object tpuIpv4CidrBlock_;
  /**
   *
   *
   * <pre>
   * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
   * range will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * If unspecified, the range will use the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string tpu_ipv4_cidr_block = 13;</code>
   *
   * @return The tpuIpv4CidrBlock.
   */
  @java.lang.Override
  public java.lang.String getTpuIpv4CidrBlock() {
    java.lang.Object ref = tpuIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tpuIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
   * range will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * If unspecified, the range will use the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string tpu_ipv4_cidr_block = 13;</code>
   *
   * @return The bytes for tpuIpv4CidrBlock.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTpuIpv4CidrBlockBytes() {
    java.lang.Object ref = tpuIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      tpuIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USE_ROUTES_FIELD_NUMBER = 15;
  private boolean useRoutes_;
  /**
   *
   *
   * <pre>
   * Whether routes will be used for pod IPs in the cluster.
   * This is used in conjunction with use_ip_aliases. It cannot be true if
   * use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
   * then the server picks the default IP allocation mode
   * </pre>
   *
   * <code>bool use_routes = 15;</code>
   *
   * @return The useRoutes.
   */
  @java.lang.Override
  public boolean getUseRoutes() {
    return useRoutes_;
  }

  public static final int STACK_TYPE_FIELD_NUMBER = 16;
  private int stackType_;
  /**
   *
   *
   * <pre>
   * The IP stack type of the cluster
   * </pre>
   *
   * <code>.google.container.v1.StackType stack_type = 16;</code>
   *
   * @return The enum numeric value on the wire for stackType.
   */
  @java.lang.Override
  public int getStackTypeValue() {
    return stackType_;
  }
  /**
   *
   *
   * <pre>
   * The IP stack type of the cluster
   * </pre>
   *
   * <code>.google.container.v1.StackType stack_type = 16;</code>
   *
   * @return The stackType.
   */
  @java.lang.Override
  public com.google.container.v1.StackType getStackType() {
    @SuppressWarnings("deprecation")
    com.google.container.v1.StackType result =
        com.google.container.v1.StackType.valueOf(stackType_);
    return result == null ? com.google.container.v1.StackType.UNRECOGNIZED : result;
  }

  public static final int IPV6_ACCESS_TYPE_FIELD_NUMBER = 17;
  private int ipv6AccessType_;
  /**
   *
   *
   * <pre>
   * The ipv6 access type (internal or external) when create_subnetwork is true
   * </pre>
   *
   * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
   *
   * @return The enum numeric value on the wire for ipv6AccessType.
   */
  @java.lang.Override
  public int getIpv6AccessTypeValue() {
    return ipv6AccessType_;
  }
  /**
   *
   *
   * <pre>
   * The ipv6 access type (internal or external) when create_subnetwork is true
   * </pre>
   *
   * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
   *
   * @return The ipv6AccessType.
   */
  @java.lang.Override
  public com.google.container.v1.IPv6AccessType getIpv6AccessType() {
    @SuppressWarnings("deprecation")
    com.google.container.v1.IPv6AccessType result =
        com.google.container.v1.IPv6AccessType.valueOf(ipv6AccessType_);
    return result == null ? com.google.container.v1.IPv6AccessType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (useIpAliases_ != false) {
      output.writeBool(1, useIpAliases_);
    }
    if (createSubnetwork_ != false) {
      output.writeBool(2, createSubnetwork_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetworkName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, subnetworkName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterIpv4Cidr_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clusterIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nodeIpv4Cidr_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, nodeIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesIpv4Cidr_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, servicesIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterSecondaryRangeName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, clusterSecondaryRangeName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesSecondaryRangeName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, servicesSecondaryRangeName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterIpv4CidrBlock_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, clusterIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nodeIpv4CidrBlock_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, nodeIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesIpv4CidrBlock_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, servicesIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tpuIpv4CidrBlock_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, tpuIpv4CidrBlock_);
    }
    if (useRoutes_ != false) {
      output.writeBool(15, useRoutes_);
    }
    if (stackType_ != com.google.container.v1.StackType.STACK_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(16, stackType_);
    }
    if (ipv6AccessType_
        != com.google.container.v1.IPv6AccessType.IPV6_ACCESS_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(17, ipv6AccessType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (useIpAliases_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, useIpAliases_);
    }
    if (createSubnetwork_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, createSubnetwork_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetworkName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, subnetworkName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterIpv4Cidr_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clusterIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nodeIpv4Cidr_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, nodeIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesIpv4Cidr_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, servicesIpv4Cidr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterSecondaryRangeName_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(7, clusterSecondaryRangeName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesSecondaryRangeName_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(8, servicesSecondaryRangeName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterIpv4CidrBlock_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, clusterIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nodeIpv4CidrBlock_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, nodeIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(servicesIpv4CidrBlock_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, servicesIpv4CidrBlock_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tpuIpv4CidrBlock_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, tpuIpv4CidrBlock_);
    }
    if (useRoutes_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(15, useRoutes_);
    }
    if (stackType_ != com.google.container.v1.StackType.STACK_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(16, stackType_);
    }
    if (ipv6AccessType_
        != com.google.container.v1.IPv6AccessType.IPV6_ACCESS_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(17, ipv6AccessType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.container.v1.IPAllocationPolicy)) {
      return super.equals(obj);
    }
    com.google.container.v1.IPAllocationPolicy other =
        (com.google.container.v1.IPAllocationPolicy) obj;

    if (getUseIpAliases() != other.getUseIpAliases()) return false;
    if (getCreateSubnetwork() != other.getCreateSubnetwork()) return false;
    if (!getSubnetworkName().equals(other.getSubnetworkName())) return false;
    if (!getClusterIpv4Cidr().equals(other.getClusterIpv4Cidr())) return false;
    if (!getNodeIpv4Cidr().equals(other.getNodeIpv4Cidr())) return false;
    if (!getServicesIpv4Cidr().equals(other.getServicesIpv4Cidr())) return false;
    if (!getClusterSecondaryRangeName().equals(other.getClusterSecondaryRangeName())) return false;
    if (!getServicesSecondaryRangeName().equals(other.getServicesSecondaryRangeName()))
      return false;
    if (!getClusterIpv4CidrBlock().equals(other.getClusterIpv4CidrBlock())) return false;
    if (!getNodeIpv4CidrBlock().equals(other.getNodeIpv4CidrBlock())) return false;
    if (!getServicesIpv4CidrBlock().equals(other.getServicesIpv4CidrBlock())) return false;
    if (!getTpuIpv4CidrBlock().equals(other.getTpuIpv4CidrBlock())) return false;
    if (getUseRoutes() != other.getUseRoutes()) return false;
    if (stackType_ != other.stackType_) return false;
    if (ipv6AccessType_ != other.ipv6AccessType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USE_IP_ALIASES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getUseIpAliases());
    hash = (37 * hash) + CREATE_SUBNETWORK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getCreateSubnetwork());
    hash = (37 * hash) + SUBNETWORK_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getSubnetworkName().hashCode();
    hash = (37 * hash) + CLUSTER_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getClusterIpv4Cidr().hashCode();
    hash = (37 * hash) + NODE_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getNodeIpv4Cidr().hashCode();
    hash = (37 * hash) + SERVICES_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getServicesIpv4Cidr().hashCode();
    hash = (37 * hash) + CLUSTER_SECONDARY_RANGE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getClusterSecondaryRangeName().hashCode();
    hash = (37 * hash) + SERVICES_SECONDARY_RANGE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getServicesSecondaryRangeName().hashCode();
    hash = (37 * hash) + CLUSTER_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getClusterIpv4CidrBlock().hashCode();
    hash = (37 * hash) + NODE_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getNodeIpv4CidrBlock().hashCode();
    hash = (37 * hash) + SERVICES_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getServicesIpv4CidrBlock().hashCode();
    hash = (37 * hash) + TPU_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getTpuIpv4CidrBlock().hashCode();
    hash = (37 * hash) + USE_ROUTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getUseRoutes());
    hash = (37 * hash) + STACK_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + stackType_;
    hash = (37 * hash) + IPV6_ACCESS_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + ipv6AccessType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.container.v1.IPAllocationPolicy parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.container.v1.IPAllocationPolicy parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.container.v1.IPAllocationPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Configuration for controlling how IPs are allocated in the cluster.
   * </pre>
   *
   * Protobuf type {@code google.container.v1.IPAllocationPolicy}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.container.v1.IPAllocationPolicy)
      com.google.container.v1.IPAllocationPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.container.v1.ClusterServiceProto
          .internal_static_google_container_v1_IPAllocationPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.container.v1.ClusterServiceProto
          .internal_static_google_container_v1_IPAllocationPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.container.v1.IPAllocationPolicy.class,
              com.google.container.v1.IPAllocationPolicy.Builder.class);
    }

    // Construct using com.google.container.v1.IPAllocationPolicy.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      useIpAliases_ = false;

      createSubnetwork_ = false;

      subnetworkName_ = "";

      clusterIpv4Cidr_ = "";

      nodeIpv4Cidr_ = "";

      servicesIpv4Cidr_ = "";

      clusterSecondaryRangeName_ = "";

      servicesSecondaryRangeName_ = "";

      clusterIpv4CidrBlock_ = "";

      nodeIpv4CidrBlock_ = "";

      servicesIpv4CidrBlock_ = "";

      tpuIpv4CidrBlock_ = "";

      useRoutes_ = false;

      stackType_ = 0;

      ipv6AccessType_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.container.v1.ClusterServiceProto
          .internal_static_google_container_v1_IPAllocationPolicy_descriptor;
    }

    @java.lang.Override
    public com.google.container.v1.IPAllocationPolicy getDefaultInstanceForType() {
      return com.google.container.v1.IPAllocationPolicy.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.container.v1.IPAllocationPolicy build() {
      com.google.container.v1.IPAllocationPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.container.v1.IPAllocationPolicy buildPartial() {
      com.google.container.v1.IPAllocationPolicy result =
          new com.google.container.v1.IPAllocationPolicy(this);
      result.useIpAliases_ = useIpAliases_;
      result.createSubnetwork_ = createSubnetwork_;
      result.subnetworkName_ = subnetworkName_;
      result.clusterIpv4Cidr_ = clusterIpv4Cidr_;
      result.nodeIpv4Cidr_ = nodeIpv4Cidr_;
      result.servicesIpv4Cidr_ = servicesIpv4Cidr_;
      result.clusterSecondaryRangeName_ = clusterSecondaryRangeName_;
      result.servicesSecondaryRangeName_ = servicesSecondaryRangeName_;
      result.clusterIpv4CidrBlock_ = clusterIpv4CidrBlock_;
      result.nodeIpv4CidrBlock_ = nodeIpv4CidrBlock_;
      result.servicesIpv4CidrBlock_ = servicesIpv4CidrBlock_;
      result.tpuIpv4CidrBlock_ = tpuIpv4CidrBlock_;
      result.useRoutes_ = useRoutes_;
      result.stackType_ = stackType_;
      result.ipv6AccessType_ = ipv6AccessType_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.container.v1.IPAllocationPolicy) {
        return mergeFrom((com.google.container.v1.IPAllocationPolicy) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.container.v1.IPAllocationPolicy other) {
      if (other == com.google.container.v1.IPAllocationPolicy.getDefaultInstance()) return this;
      if (other.getUseIpAliases() != false) {
        setUseIpAliases(other.getUseIpAliases());
      }
      if (other.getCreateSubnetwork() != false) {
        setCreateSubnetwork(other.getCreateSubnetwork());
      }
      if (!other.getSubnetworkName().isEmpty()) {
        subnetworkName_ = other.subnetworkName_;
        onChanged();
      }
      if (!other.getClusterIpv4Cidr().isEmpty()) {
        clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
        onChanged();
      }
      if (!other.getNodeIpv4Cidr().isEmpty()) {
        nodeIpv4Cidr_ = other.nodeIpv4Cidr_;
        onChanged();
      }
      if (!other.getServicesIpv4Cidr().isEmpty()) {
        servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
        onChanged();
      }
      if (!other.getClusterSecondaryRangeName().isEmpty()) {
        clusterSecondaryRangeName_ = other.clusterSecondaryRangeName_;
        onChanged();
      }
      if (!other.getServicesSecondaryRangeName().isEmpty()) {
        servicesSecondaryRangeName_ = other.servicesSecondaryRangeName_;
        onChanged();
      }
      if (!other.getClusterIpv4CidrBlock().isEmpty()) {
        clusterIpv4CidrBlock_ = other.clusterIpv4CidrBlock_;
        onChanged();
      }
      if (!other.getNodeIpv4CidrBlock().isEmpty()) {
        nodeIpv4CidrBlock_ = other.nodeIpv4CidrBlock_;
        onChanged();
      }
      if (!other.getServicesIpv4CidrBlock().isEmpty()) {
        servicesIpv4CidrBlock_ = other.servicesIpv4CidrBlock_;
        onChanged();
      }
      if (!other.getTpuIpv4CidrBlock().isEmpty()) {
        tpuIpv4CidrBlock_ = other.tpuIpv4CidrBlock_;
        onChanged();
      }
      if (other.getUseRoutes() != false) {
        setUseRoutes(other.getUseRoutes());
      }
      if (other.stackType_ != 0) {
        setStackTypeValue(other.getStackTypeValue());
      }
      if (other.ipv6AccessType_ != 0) {
        setIpv6AccessTypeValue(other.getIpv6AccessTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                useIpAliases_ = input.readBool();

                break;
              } // case 8
            case 16:
              {
                createSubnetwork_ = input.readBool();

                break;
              } // case 16
            case 26:
              {
                subnetworkName_ = input.readStringRequireUtf8();

                break;
              } // case 26
            case 34:
              {
                clusterIpv4Cidr_ = input.readStringRequireUtf8();

                break;
              } // case 34
            case 42:
              {
                nodeIpv4Cidr_ = input.readStringRequireUtf8();

                break;
              } // case 42
            case 50:
              {
                servicesIpv4Cidr_ = input.readStringRequireUtf8();

                break;
              } // case 50
            case 58:
              {
                clusterSecondaryRangeName_ = input.readStringRequireUtf8();

                break;
              } // case 58
            case 66:
              {
                servicesSecondaryRangeName_ = input.readStringRequireUtf8();

                break;
              } // case 66
            case 74:
              {
                clusterIpv4CidrBlock_ = input.readStringRequireUtf8();

                break;
              } // case 74
            case 82:
              {
                nodeIpv4CidrBlock_ = input.readStringRequireUtf8();

                break;
              } // case 82
            case 90:
              {
                servicesIpv4CidrBlock_ = input.readStringRequireUtf8();

                break;
              } // case 90
            case 106:
              {
                tpuIpv4CidrBlock_ = input.readStringRequireUtf8();

                break;
              } // case 106
            case 120:
              {
                useRoutes_ = input.readBool();

                break;
              } // case 120
            case 128:
              {
                stackType_ = input.readEnum();

                break;
              } // case 128
            case 136:
              {
                ipv6AccessType_ = input.readEnum();

                break;
              } // case 136
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private boolean useIpAliases_;
    /**
     *
     *
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * This is used in conjunction with use_routes. It cannot
     * be true if use_routes is true. If both use_ip_aliases and use_routes are
     * false, then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     *
     * @return The useIpAliases.
     */
    @java.lang.Override
    public boolean getUseIpAliases() {
      return useIpAliases_;
    }
    /**
     *
     *
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * This is used in conjunction with use_routes. It cannot
     * be true if use_routes is true. If both use_ip_aliases and use_routes are
     * false, then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     *
     * @param value The useIpAliases to set.
     * @return This builder for chaining.
     */
    public Builder setUseIpAliases(boolean value) {

      useIpAliases_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * This is used in conjunction with use_routes. It cannot
     * be true if use_routes is true. If both use_ip_aliases and use_routes are
     * false, then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUseIpAliases() {

      useIpAliases_ = false;
      onChanged();
      return this;
    }

    private boolean createSubnetwork_;
    /**
     *
     *
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     *
     * @return The createSubnetwork.
     */
    @java.lang.Override
    public boolean getCreateSubnetwork() {
      return createSubnetwork_;
    }
    /**
     *
     *
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     *
     * @param value The createSubnetwork to set.
     * @return This builder for chaining.
     */
    public Builder setCreateSubnetwork(boolean value) {

      createSubnetwork_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCreateSubnetwork() {

      createSubnetwork_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object subnetworkName_ = "";
    /**
     *
     *
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     *
     * @return The subnetworkName.
     */
    public java.lang.String getSubnetworkName() {
      java.lang.Object ref = subnetworkName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetworkName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     *
     * @return The bytes for subnetworkName.
     */
    public com.google.protobuf.ByteString getSubnetworkNameBytes() {
      java.lang.Object ref = subnetworkName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        subnetworkName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     *
     * @param value The subnetworkName to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetworkName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      subnetworkName_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSubnetworkName() {

      subnetworkName_ = getDefaultInstance().getSubnetworkName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     *
     * @param value The bytes for subnetworkName to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetworkNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      subnetworkName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterIpv4Cidr_ = "";
    /**
     *
     *
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1307
     * @return The clusterIpv4Cidr.
     */
    @java.lang.Deprecated
    public java.lang.String getClusterIpv4Cidr() {
      java.lang.Object ref = clusterIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1307
     * @return The bytes for clusterIpv4Cidr.
     */
    @java.lang.Deprecated
    public com.google.protobuf.ByteString getClusterIpv4CidrBytes() {
      java.lang.Object ref = clusterIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clusterIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1307
     * @param value The clusterIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setClusterIpv4Cidr(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      clusterIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1307
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearClusterIpv4Cidr() {

      clusterIpv4Cidr_ = getDefaultInstance().getClusterIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1307
     * @param value The bytes for clusterIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setClusterIpv4CidrBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      clusterIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nodeIpv4Cidr_ = "";
    /**
     *
     *
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1310
     * @return The nodeIpv4Cidr.
     */
    @java.lang.Deprecated
    public java.lang.String getNodeIpv4Cidr() {
      java.lang.Object ref = nodeIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1310
     * @return The bytes for nodeIpv4Cidr.
     */
    @java.lang.Deprecated
    public com.google.protobuf.ByteString getNodeIpv4CidrBytes() {
      java.lang.Object ref = nodeIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        nodeIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1310
     * @param value The nodeIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setNodeIpv4Cidr(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      nodeIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1310
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearNodeIpv4Cidr() {

      nodeIpv4Cidr_ = getDefaultInstance().getNodeIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.node_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1310
     * @param value The bytes for nodeIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setNodeIpv4CidrBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      nodeIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesIpv4Cidr_ = "";
    /**
     *
     *
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1313
     * @return The servicesIpv4Cidr.
     */
    @java.lang.Deprecated
    public java.lang.String getServicesIpv4Cidr() {
      java.lang.Object ref = servicesIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1313
     * @return The bytes for servicesIpv4Cidr.
     */
    @java.lang.Deprecated
    public com.google.protobuf.ByteString getServicesIpv4CidrBytes() {
      java.lang.Object ref = servicesIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        servicesIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1313
     * @param value The servicesIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setServicesIpv4Cidr(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      servicesIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1313
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearServicesIpv4Cidr() {

      servicesIpv4Cidr_ = getDefaultInstance().getServicesIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6 [deprecated = true];</code>
     *
     * @deprecated google.container.v1.IPAllocationPolicy.services_ipv4_cidr is deprecated. See
     *     google/container/v1/cluster_service.proto;l=1313
     * @param value The bytes for servicesIpv4Cidr to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setServicesIpv4CidrBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      servicesIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterSecondaryRangeName_ = "";
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     *
     * @return The clusterSecondaryRangeName.
     */
    public java.lang.String getClusterSecondaryRangeName() {
      java.lang.Object ref = clusterSecondaryRangeName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterSecondaryRangeName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     *
     * @return The bytes for clusterSecondaryRangeName.
     */
    public com.google.protobuf.ByteString getClusterSecondaryRangeNameBytes() {
      java.lang.Object ref = clusterSecondaryRangeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clusterSecondaryRangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     *
     * @param value The clusterSecondaryRangeName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterSecondaryRangeName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      clusterSecondaryRangeName_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClusterSecondaryRangeName() {

      clusterSecondaryRangeName_ = getDefaultInstance().getClusterSecondaryRangeName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     *
     * @param value The bytes for clusterSecondaryRangeName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterSecondaryRangeNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      clusterSecondaryRangeName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesSecondaryRangeName_ = "";
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     *
     * @return The servicesSecondaryRangeName.
     */
    public java.lang.String getServicesSecondaryRangeName() {
      java.lang.Object ref = servicesSecondaryRangeName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesSecondaryRangeName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     *
     * @return The bytes for servicesSecondaryRangeName.
     */
    public com.google.protobuf.ByteString getServicesSecondaryRangeNameBytes() {
      java.lang.Object ref = servicesSecondaryRangeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        servicesSecondaryRangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     *
     * @param value The servicesSecondaryRangeName to set.
     * @return This builder for chaining.
     */
    public Builder setServicesSecondaryRangeName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      servicesSecondaryRangeName_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServicesSecondaryRangeName() {

      servicesSecondaryRangeName_ = getDefaultInstance().getServicesSecondaryRangeName();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     *
     * @param value The bytes for servicesSecondaryRangeName to set.
     * @return This builder for chaining.
     */
    public Builder setServicesSecondaryRangeNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      servicesSecondaryRangeName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterIpv4CidrBlock_ = "";
    /**
     *
     *
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     *
     * @return The clusterIpv4CidrBlock.
     */
    public java.lang.String getClusterIpv4CidrBlock() {
      java.lang.Object ref = clusterIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     *
     * @return The bytes for clusterIpv4CidrBlock.
     */
    public com.google.protobuf.ByteString getClusterIpv4CidrBlockBytes() {
      java.lang.Object ref = clusterIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clusterIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     *
     * @param value The clusterIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setClusterIpv4CidrBlock(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      clusterIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClusterIpv4CidrBlock() {

      clusterIpv4CidrBlock_ = getDefaultInstance().getClusterIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     *
     * @param value The bytes for clusterIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setClusterIpv4CidrBlockBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      clusterIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nodeIpv4CidrBlock_ = "";
    /**
     *
     *
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     *
     * @return The nodeIpv4CidrBlock.
     */
    public java.lang.String getNodeIpv4CidrBlock() {
      java.lang.Object ref = nodeIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     *
     * @return The bytes for nodeIpv4CidrBlock.
     */
    public com.google.protobuf.ByteString getNodeIpv4CidrBlockBytes() {
      java.lang.Object ref = nodeIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        nodeIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     *
     * @param value The nodeIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setNodeIpv4CidrBlock(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      nodeIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearNodeIpv4CidrBlock() {

      nodeIpv4CidrBlock_ = getDefaultInstance().getNodeIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     *
     * @param value The bytes for nodeIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setNodeIpv4CidrBlockBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      nodeIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesIpv4CidrBlock_ = "";
    /**
     *
     *
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     *
     * @return The servicesIpv4CidrBlock.
     */
    public java.lang.String getServicesIpv4CidrBlock() {
      java.lang.Object ref = servicesIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     *
     * @return The bytes for servicesIpv4CidrBlock.
     */
    public com.google.protobuf.ByteString getServicesIpv4CidrBlockBytes() {
      java.lang.Object ref = servicesIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        servicesIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     *
     * @param value The servicesIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setServicesIpv4CidrBlock(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      servicesIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServicesIpv4CidrBlock() {

      servicesIpv4CidrBlock_ = getDefaultInstance().getServicesIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     *
     * @param value The bytes for servicesIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setServicesIpv4CidrBlockBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      servicesIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object tpuIpv4CidrBlock_ = "";
    /**
     *
     *
     * <pre>
     * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
     * range will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * If unspecified, the range will use the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string tpu_ipv4_cidr_block = 13;</code>
     *
     * @return The tpuIpv4CidrBlock.
     */
    public java.lang.String getTpuIpv4CidrBlock() {
      java.lang.Object ref = tpuIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tpuIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
     * range will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * If unspecified, the range will use the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string tpu_ipv4_cidr_block = 13;</code>
     *
     * @return The bytes for tpuIpv4CidrBlock.
     */
    public com.google.protobuf.ByteString getTpuIpv4CidrBlockBytes() {
      java.lang.Object ref = tpuIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tpuIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
     * range will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * If unspecified, the range will use the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string tpu_ipv4_cidr_block = 13;</code>
     *
     * @param value The tpuIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setTpuIpv4CidrBlock(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      tpuIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
     * range will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * If unspecified, the range will use the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string tpu_ipv4_cidr_block = 13;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTpuIpv4CidrBlock() {

      tpuIpv4CidrBlock_ = getDefaultInstance().getTpuIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP address range of the Cloud TPUs in this cluster. If unspecified, a
     * range will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * If unspecified, the range will use the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string tpu_ipv4_cidr_block = 13;</code>
     *
     * @param value The bytes for tpuIpv4CidrBlock to set.
     * @return This builder for chaining.
     */
    public Builder setTpuIpv4CidrBlockBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      tpuIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private boolean useRoutes_;
    /**
     *
     *
     * <pre>
     * Whether routes will be used for pod IPs in the cluster.
     * This is used in conjunction with use_ip_aliases. It cannot be true if
     * use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
     * then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_routes = 15;</code>
     *
     * @return The useRoutes.
     */
    @java.lang.Override
    public boolean getUseRoutes() {
      return useRoutes_;
    }
    /**
     *
     *
     * <pre>
     * Whether routes will be used for pod IPs in the cluster.
     * This is used in conjunction with use_ip_aliases. It cannot be true if
     * use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
     * then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_routes = 15;</code>
     *
     * @param value The useRoutes to set.
     * @return This builder for chaining.
     */
    public Builder setUseRoutes(boolean value) {

      useRoutes_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether routes will be used for pod IPs in the cluster.
     * This is used in conjunction with use_ip_aliases. It cannot be true if
     * use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
     * then the server picks the default IP allocation mode
     * </pre>
     *
     * <code>bool use_routes = 15;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUseRoutes() {

      useRoutes_ = false;
      onChanged();
      return this;
    }

    private int stackType_ = 0;
    /**
     *
     *
     * <pre>
     * The IP stack type of the cluster
     * </pre>
     *
     * <code>.google.container.v1.StackType stack_type = 16;</code>
     *
     * @return The enum numeric value on the wire for stackType.
     */
    @java.lang.Override
    public int getStackTypeValue() {
      return stackType_;
    }
    /**
     *
     *
     * <pre>
     * The IP stack type of the cluster
     * </pre>
     *
     * <code>.google.container.v1.StackType stack_type = 16;</code>
     *
     * @param value The enum numeric value on the wire for stackType to set.
     * @return This builder for chaining.
     */
    public Builder setStackTypeValue(int value) {

      stackType_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP stack type of the cluster
     * </pre>
     *
     * <code>.google.container.v1.StackType stack_type = 16;</code>
     *
     * @return The stackType.
     */
    @java.lang.Override
    public com.google.container.v1.StackType getStackType() {
      @SuppressWarnings("deprecation")
      com.google.container.v1.StackType result =
          com.google.container.v1.StackType.valueOf(stackType_);
      return result == null ? com.google.container.v1.StackType.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * The IP stack type of the cluster
     * </pre>
     *
     * <code>.google.container.v1.StackType stack_type = 16;</code>
     *
     * @param value The stackType to set.
     * @return This builder for chaining.
     */
    public Builder setStackType(com.google.container.v1.StackType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      stackType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The IP stack type of the cluster
     * </pre>
     *
     * <code>.google.container.v1.StackType stack_type = 16;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStackType() {

      stackType_ = 0;
      onChanged();
      return this;
    }

    private int ipv6AccessType_ = 0;
    /**
     *
     *
     * <pre>
     * The ipv6 access type (internal or external) when create_subnetwork is true
     * </pre>
     *
     * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
     *
     * @return The enum numeric value on the wire for ipv6AccessType.
     */
    @java.lang.Override
    public int getIpv6AccessTypeValue() {
      return ipv6AccessType_;
    }
    /**
     *
     *
     * <pre>
     * The ipv6 access type (internal or external) when create_subnetwork is true
     * </pre>
     *
     * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
     *
     * @param value The enum numeric value on the wire for ipv6AccessType to set.
     * @return This builder for chaining.
     */
    public Builder setIpv6AccessTypeValue(int value) {

      ipv6AccessType_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ipv6 access type (internal or external) when create_subnetwork is true
     * </pre>
     *
     * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
     *
     * @return The ipv6AccessType.
     */
    @java.lang.Override
    public com.google.container.v1.IPv6AccessType getIpv6AccessType() {
      @SuppressWarnings("deprecation")
      com.google.container.v1.IPv6AccessType result =
          com.google.container.v1.IPv6AccessType.valueOf(ipv6AccessType_);
      return result == null ? com.google.container.v1.IPv6AccessType.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * The ipv6 access type (internal or external) when create_subnetwork is true
     * </pre>
     *
     * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
     *
     * @param value The ipv6AccessType to set.
     * @return This builder for chaining.
     */
    public Builder setIpv6AccessType(com.google.container.v1.IPv6AccessType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      ipv6AccessType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ipv6 access type (internal or external) when create_subnetwork is true
     * </pre>
     *
     * <code>.google.container.v1.IPv6AccessType ipv6_access_type = 17;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIpv6AccessType() {

      ipv6AccessType_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.container.v1.IPAllocationPolicy)
  }

  // @@protoc_insertion_point(class_scope:google.container.v1.IPAllocationPolicy)
  private static final com.google.container.v1.IPAllocationPolicy DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.container.v1.IPAllocationPolicy();
  }

  public static com.google.container.v1.IPAllocationPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IPAllocationPolicy> PARSER =
      new com.google.protobuf.AbstractParser<IPAllocationPolicy>() {
        @java.lang.Override
        public IPAllocationPolicy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<IPAllocationPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IPAllocationPolicy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.container.v1.IPAllocationPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
